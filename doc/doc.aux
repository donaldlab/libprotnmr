\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Protein structure manipulation}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}NMR data processing}{1}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {1}{\ignorespaces  Read, transform, and write a protein structure. \relax }}{2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{code:readWrite}{{1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Atom name translation and mapping}{2}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {2}{\ignorespaces  Read restraints, translate atom names, add pseudo-atoms, and map the restraints to a protein structure \relax }}{3}}
\newlabel{code:nmrPrep}{{2}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Analysis of protein structures and data}{4}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {3}{\ignorespaces  Optimal backbone alignment and backbone atom RMSD computation of two conformations of a protein structure. \relax }}{4}}
\newlabel{code:proteinAnalysis}{{3}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Integration with Xplor-NIH}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Practical geometry and linear algebra}{4}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {4}{\ignorespaces  Integration with Xplor-NIH to perform energy minimization of protein structures. \relax }}{5}}
\newlabel{code:xplor}{{4}{5}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {5}{\ignorespaces  Vector manipulation using {{\sc  LibProtNmr}} \relax }}{5}}
\newlabel{code:vectors}{{5}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  Fast near-uniform sampling of the sphere using icosahedral approximations. \relax }}{6}}
\newlabel{fig:geodesicGrid}{{1}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Visualization using KiNG}{6}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {6}{\ignorespaces  Display 3D geometry using KiNG. \relax }}{6}}
\newlabel{code:king}{{6}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Plotting}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  a protein structure rendered by {{\sc  LibProtNmr}} in KiNG along with the principal axes of the alignment. \relax }}{7}}
\newlabel{fig:kingProtein}{{2}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  Viewing complicated abstract geometry is also possible using KiNG. \relax }}{7}}
\newlabel{fig:kingAdvanced}{{3}{7}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {7}{\ignorespaces  Rendering specialized plots takes only a few lines of code. \relax }}{8}}
\newlabel{code:plots}{{7}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {9}Utilities}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Plotting functions defined over the sphere}}{9}}
\newlabel{fig:plotSphere}{{4}{9}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {8}{\ignorespaces  Timers provide a simple way to report the running time of algorithms. \relax }}{9}}
\newlabel{code:timer}{{8}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {10}Python bindings}{9}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {9}{\ignorespaces  Profilers are a useful and simple tool to find performance bottlenecks. \relax }}{10}}
\newlabel{code:profiler}{{9}{10}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {10}{\ignorespaces  Progress bars show long one might have to wait for a result. \relax }}{10}}
\newlabel{code:progressBar}{{10}{10}}
\@writefile{locs}{\contentsline {codesamplefloat}{\numberline {11}{\ignorespaces  Python bindings make {{\sc  LibProtNmr}}'s catalog of modules available in a scripting environment. \relax }}{11}}
\newlabel{code:python}{{11}{11}}
